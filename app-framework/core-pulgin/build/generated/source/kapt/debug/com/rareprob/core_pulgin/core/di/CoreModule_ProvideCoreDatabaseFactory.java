// Generated by Dagger (https://dagger.dev).
package com.rareprob.core_pulgin.core.di;

import android.app.Application;
import com.rareprob.core_pulgin.core.base.CoreDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoreModule_ProvideCoreDatabaseFactory implements Factory<CoreDatabase> {
  private final Provider<Application> appProvider;

  public CoreModule_ProvideCoreDatabaseFactory(Provider<Application> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public CoreDatabase get() {
    return provideCoreDatabase(appProvider.get());
  }

  public static CoreModule_ProvideCoreDatabaseFactory create(Provider<Application> appProvider) {
    return new CoreModule_ProvideCoreDatabaseFactory(appProvider);
  }

  public static CoreDatabase provideCoreDatabase(Application app) {
    return Preconditions.checkNotNullFromProvides(CoreModule.INSTANCE.provideCoreDatabase(app));
  }
}
